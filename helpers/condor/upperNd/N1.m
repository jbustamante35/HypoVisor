function [Y,Xf,Af] = N1(X,~,~)
%N1 neural network simulation function.
%
% Auto-generated by MATLAB, 11-Feb-2022 15:21:37.
% 
% [Y] = N1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1264.25331958419;-1736.04970875207;-1442.45999270144;-1633.8449430091;-1359.31877085745;-824.433760271242;-1314.42201676621;-906.841468117743;-881.917182619997;-868.707848468609;-806.158068559744;-950.843979304398;-806.414836132884;-665.976052098721;-784.457425652914;-766.266289949527;-786.010269148153;-617.153498700322;-628.44670054542;-576.272882564393];
x1_step1.gain = [0.000596749675880891;0.000628324567031303;0.000687842802517544;0.000663585257273009;0.000765755757282941;0.00104108750890276;0.000869392579217052;0.000824702626264958;0.00114641481988561;0.00111443038869558;0.00116597154978739;0.00103737847137803;0.0011920431821689;0.00149250474639772;0.0013555235371884;0.0014191224100834;0.00139617733423869;0.0013715817580614;0.00167122525007578;0.00177035776747581];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.471952261239204196;1.0600293931103501599;1.4774192264924284057;8.2853579894420654739;-2.3086366337577883812];
IW1_1 = [0.64947581410537247315 1.8954919718860891997 0.20867346153495144878 -0.66555965134432160113 -1.9413275813520756152 -0.10337426796572424248 0.065470072687040914428 1.5029395445557409694 0.30976635872964036755 0.31676884059221588341 -0.27064619409911111481 0.22295468061158382755 0.47454145036524186807 0.20958188734677210552 0.73456869402154256754 -0.096588023182293633595 -0.48937173792864718802 0.62949300524452134198 0.68387523353268575566 -0.051318783607019517745;1.1665142186587789119 -2.7740180547031934033 1.1978965838372641617 4.1341466954825616398 -0.77912291210161965793 -0.62794860426779230966 -1.1801327967006325359 0.49177526950709610221 1.5153177151875956152 -0.97598598122609347971 1.0695258222981600671 -1.3159321541044384229 2.7783666342392496773 -0.22164086938185884046 1.3764114219860832389 -1.3907952030859249692 1.1036922816760341703 -0.28230154683728436726 -0.43199352813671371143 -1.8861153332998179533;0.94436655274709457863 -1.276240529836369042 1.1103165336688742837 2.1335910107249493883 -0.34919677869347370835 0.38017094792028061079 0.13414348184357263727 0.60628090697174208401 0.6647334880651828426 -0.93499194142944497266 0.76700600891835268857 -0.51974978046391795417 1.6390446951991224367 -0.42531491830742185201 0.60460410329653846428 -0.49767152677109122161 0.44517847607171606716 -0.12840282073307818234 -0.59930327792220294825 -0.54933099428387621721;3.9832808764745295527 -4.3190252413426977185 1.9723105977087467267 -2.4529883556038964976 -1.3817688528259643999 2.1139333543767135914 -6.1494270300028643916 0.8754949403481764314 3.2658769444845026086 1.3707471041950745061 -3.5785300394330596951 2.1680379637874245269 1.6783415306051612248 -3.2024200039131334172 -1.4488085191644435312 -1.2310708019926190904 0.53913577398259915352 1.4579903393548327983 -2.5574222914067297197 -1.2565432435130317046;-0.49100271821931668059 1.1669153232681879206 -2.4066069476397990989 0.58606806900706243102 0.62480039645938723059 -0.31291400297287880194 -0.53356431828939343553 2.3425839031587734063 0.41576118106270093522 0.25231792391924257046 -0.94004658212050806743 0.13331576461231198216 0.91104484798416640601 1.265549483959387489 0.037513376796651537459 -0.6487014964182267196 1.7697638028506503804 -0.12512887064948993721 0.35911342982576749394 -0.5467337593988533806];

% Layer 2
b2 = [0.034039866420738286446;0.16248858166487414878];
LW2_1 = [0.091518322036464885838 -0.2029401725066961315 0.48194388904548418617 -0.16680667340348670491 -0.02325071653958507914;-0.29941778815341391073 0.00067809807535239741572 -0.069913445904268400888 -0.071597473844002751386 0.38952754406492168249];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0501268984903099;0.0397679584533499];
y1_step1.xoffset = [-21.2808809056095;-22.8855207623508];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
