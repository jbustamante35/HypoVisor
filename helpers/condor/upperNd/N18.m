function [Y,Xf,Af] = N18(X,~,~)
%N18 neural network simulation function.
%
% Auto-generated by MATLAB, 11-Feb-2022 15:21:41.
% 
% [Y] = N18(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1412.19325511944;-1546.69052190863;-1400.24284017473;-1622.46767256077;-1339.00469759187;-1019.03009659909;-917.237220310802;-1037.96413370063;-866.021475229353;-885.718673033213;-945.236438665536;-911.921361398978;-732.674886604005;-709.026814913272;-591.105906036409;-803.046297776853;-474.459647765244;-703.833716968984;-589.374320473595;-556.140865162001];
x1_step1.gain = [0.000560736441407796;0.000602195049968053;0.000739696300047835;0.000653062520767914;0.000875224725980147;0.000836445084062437;0.00109900161781654;0.000971964395391407;0.00105924851912422;0.00123299837373195;0.00087011474315004;0.00120633889558515;0.00139238593604275;0.00121522078883679;0.00157199088202742;0.00148880264821468;0.00179049736497997;0.00135204714610581;0.0016699535722379;0.00180337747554119];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.434150018188563358;3.3645288373122963499;-2.2695609675857921772;-3.5929762895160868297;3.2301708367427375279];
IW1_1 = [-2.1816430588740725049 4.0863917795056803328 -1.0347022386128235105 -0.24248161628696524028 2.674547699192487471 3.0978006322259297178 -0.26215350189769631717 -1.8724140487755660534 -1.5384236992648909759 -0.7322915366772764223 1.9589058757089607976 -2.5048903497506778137 3.2764191742872492696 -0.9333678010624646415 0.78849343759165846368 -0.82280672746930971773 -1.9736286727312413181 0.37404782418388382581 0.2281782598185121691 0.26307303673257109722;2.5896106504598486175 -3.8418245581683763135 1.2651977730148902257 0.20445828607141508515 -2.3754035202515675351 -3.094335826480506757 -0.27980830817186952419 1.7962182627042631022 1.6153352474835129815 0.56728236808964960236 -1.86451157419586111 2.7623418753379791468 -2.9714889107506836652 1.0945906019315971847 -0.44496591634953935879 0.99838951225641803244 2.2040248152485149014 -0.26555606317037611097 -0.30852149989631560967 -0.14286805848656938811;0.89440213309654736928 0.056835754209828948103 0.51997219196188537715 -1.7781029905151810588 -1.0690283062668115566 0.26047456377667299598 -0.38331589598211746051 0.43056889529737774058 -1.0326503970605147575 -0.56994921165666578844 0.4531764913998750921 -0.4674071619685913892 0.6292719891822856626 0.18935319622824836605 -0.66686660408151721136 0.82731341729359497705 2.008863304109938408 -0.33233262912564093261 0.8083791853750984524 -0.77011170264065686997;2.0228276507872484657 -1.4278708083299151976 3.8338040280373304469 1.9544455568515344268 2.2139036847342494774 -0.19887098041418591055 -3.6150483546993061879 -0.90860371115468008263 0.47671440650979257647 -0.76532971908483393708 -0.17244967844908942745 4.1574632407967904157 1.3333711456985928301 -0.88104533595860556883 -0.15899403701793368704 -0.029152722714500520218 -0.55373056516224827828 -3.7689526677190499093 0.22723763730708862463 0.92746983777596603282;-1.7898775339884465119 1.2928144034561765974 -3.446460709234434372 -1.8587546495740290275 -2.0675126572260436042 0.24648878417402642071 3.1501087764054318541 0.87836291515042952405 -0.66630646422078587676 0.52629366681746381218 0.22925995042345478914 -3.9575196032180230965 -1.1294517018595429114 0.78874717322805687481 0.19294142080732876177 0.24589929745635097369 0.60053522554387028798 3.2706286990599569009 -0.039905038040364326779 -1.0902490384262819578];

% Layer 2
b2 = [0.30539543281463521485;0.064417782054705427508];
LW2_1 = [-0.12501917699061554368 -0.12817419727127812856 0.12696007009281598532 -0.31319531338609729598 -0.31232777528611765927;-0.46394995994397458805 -0.4448394670257557193 -0.011686799747665848823 0.13758499008114363771 0.12984826973126764593];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.186025148626485;0.191508409542556];
y1_step1.xoffset = [-6.38399049086827;-5.69868695914629];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
