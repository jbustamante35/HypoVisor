function [Y,Xf,Af] = N2(X,~,~)
%N2 neural network simulation function.
%
% Auto-generated by MATLAB, 30-Mar-2022 15:07:59.
% 
% [Y] = N2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1485.17673939775;-1545.52077954556;-1257.51769754286;-1485.09414146869;-1182.38509602038;-1382.63239272839;-928.915855632624;-872.229545899816;-937.534300713891;-1191.89242328566;-1031.88527292112;-727.473887061128;-746.713618086824;-1026.87076801324;-686.475126177085;-793.946163573841;-749.269771617176;-678.58051295351;-604.108566231216;-605.552965729228];
x1_step1.gain = [0.000549830037281982;0.00061014745171189;0.00080024291457261;0.000632743205671699;0.000689953717726475;0.000738693523958176;0.000890319618308706;0.00106035428093413;0.00112003316686866;0.000893629740474353;0.000982265036735818;0.00107236061229738;0.00136514668605984;0.00118824606919774;0.00129622949264125;0.0013186650760245;0.00152707198682646;0.00148317114682557;0.00133246107222208;0.00173670062688513];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.4831989029447352202;-1.188512035654938348;-0.039864927849596262788;-1.285003469761724082;1.0663851424638510768];
IW1_1 = [-0.52445132202711741698 0.036115093396181546792 0.34956651412804118362 -0.75841084667849401058 -0.29298377000627506828 -2.199853866416401349 -0.22088293425520669211 0.40228272234373624316 0.77985582508517148348 -0.29300128690133447895 -0.14975384699557850454 0.52272045991817928101 1.8158460107445479892 0.89775456114883511738 -0.87333953528682373157 -0.68143710278038205352 -0.42407170710476776998 2.011287501412227563 -0.39265477277393018296 1.1784051843010749927;0.63297970263040614913 0.79764919562030511813 1.6622764597591566105 0.97024741516495138782 1.5267732021547153476 1.0714550299512890508 0.049349285329410692846 -0.11363714674687398765 -0.58949968614981507198 -1.5632762454591357937 -0.70701003897285730204 1.2431313152627365692 0.33460525315516731482 -0.0080497391984778871032 -0.88837944554697834132 -0.98379309858987462611 0.71629921751300085209 -0.82966777950212211579 0.46560413135659250994 -0.30727794363094318442;0.69076220584415548576 -0.65108937351243634239 -0.017383088711240571311 -0.35822100168878423521 -0.41099007818353167076 3.3051644819579917289 0.0033150197120451743368 -1.0214634382922891387 -0.31955752297308792631 1.9045866557338932967 0.23728311360608922431 -0.76990904982889130093 1.2959012279514399157 -1.0656199354339628282 1.3367699955013876423 0.42374249924931101097 -0.16982050318095109898 -0.6882318476276468866 0.087529850537738054794 -0.56371024365688271462;-1.2378646777274646684 2.3734348193088190548 -1.0666872670616458496 1.4853827089913234083 -1.3038908010741707688 0.19723028238066253603 1.1765881670780966584 1.0429214347952759923 -2.074340464971514475 -1.387700121558080868 -1.0443984028980124457 0.8044352983633860088 -0.89663820008141870144 -1.011294068289310788 -0.030424315723879637174 -0.49083964761344744954 0.7322396945263000001 -0.54787383646516318869 -0.83534686051380135918 -0.50330476710820681863;-0.15128291535184903993 -1.1818986391945005554 -1.1634581151876928207 -0.82126834547347049575 -1.0216794005737548368 -1.0802536375828057924 0.12456007665782964366 -0.12227917159224271915 0.82287588802553923717 0.95385879537856399502 0.28006623741736447197 -1.5254132720532107559 0.010289901203199131735 -0.072996872700177101168 0.94656636314471687133 0.52652289587898415402 -0.79355841749884015179 0.88942304910079317271 -0.29124955349900405466 0.38437038567541181866];

% Layer 2
b2 = [0.15978323468613814251;-0.1360179071207706647];
LW2_1 = [-0.068861716342305909211 0.41578296844048379111 -0.053638837255258267622 0.027961956844006485845 0.4308768408604473632;-0.071581852838491596969 -0.46335704691447143766 -0.066125968304427018563 -0.15392998226010237706 -0.40093319552943301742];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0964367546390512;0.0681736696058432];
y1_step1.xoffset = [-12.1150001421425;-15.6937796726704];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
