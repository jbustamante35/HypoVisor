function [Y,Xf,Af] = N19(X,~,~)
%N19 neural network simulation function.
%
% Auto-generated by MATLAB, 30-Mar-2022 15:08:01.
% 
% [Y] = N19(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1417.94028917533;-1543.61732418484;-1304.77995804917;-1428.70746067601;-944.540551609402;-1034.99136172591;-901.759055181462;-1011.69076814786;-1016.30956816204;-739.436265187327;-1349.44592070436;-744.862581861719;-718.237275342184;-926.772131443414;-590.846564991186;-802.537361413078;-478.172359201629;-714.763010827282;-590.906530790478;-559.312512625584];
x1_step1.gain = [0.000560659364145;0.000603010917886977;0.000739321067849798;0.000656754480104272;0.000873728300812445;0.000826673024596222;0.00110472711364887;0.000972459513165407;0.00106502913953636;0.00122396300758845;0.000873323452008446;0.00122512874967952;0.00137992630775426;0.00122561798507702;0.00159024219433194;0.00148928013346502;0.00174286081495627;0.00135136922574998;0.00167892580572826;0.00183203133082642];
x1_step1.ymin = -1;

% Layer 1
b1 = [-5.0198451082226229758;-2.9007707192983893663;2.3700789604177381342;2.3688578038303154116;5.0791006259013897761];
IW1_1 = [-0.86871770935833614313 0.67284917735105032044 1.0195625899816089799 3.3270043151356061273 -2.1521768864709014402 -1.9881105986596245838 0.071078656467186696055 0.66612732085626791267 -0.33919372142852216578 -1.1137642620138763494 -0.04526322270780938628 2.6759180894750191904 -2.8453538561980038502 2.5651493585767406458 0.068255479430361434834 -0.15244054350596586422 1.6929800170387729885 -0.11099653993219583958 0.058771283737477225673 -1.6497139277114030165;-3.234421846190505434 3.4175607482209255927 3.8628660921923705374 0.5045018108456835737 0.4531494101132982899 -4.488241212939715119 -2.4523056715867985744 3.4173061383793115198 -3.0096376911810849286 1.4144274010801822783 -1.7119780046779926597 -2.6129978280075931707 3.9308177488951239198 1.8038747461667690164 -2.3675485812685717057 -1.2419516397847409905 2.1804151828859978934 -3.5651449761043778608 0.22114150556324835284 -2.5980284575939234237;10.21841114761733138 -4.446818544863169187 -1.3767830797266897846 -1.5550630169614798604 -1.7112004703929286631 -2.934241269409274544 0.96445090981937786623 -0.84422313678655347413 5.2866377855588728707 -5.7112673585123507891 3.8419028052653358962 -2.5175329204770755531 -4.9518048520687605318 4.5797141396284866133 4.4011106968448068244 0.38544856079415612538 1.8989480383865333657 1.0872402393091611383 1.0644745191008346819 -0.37391297987649757539;3.6673611216469748086 -1.1972348210454868411 -2.6561372075145577298 -0.6678256993233615546 1.1538842151212473919 -0.62265583826161285952 0.7257494769008148161 -1.6784064356842347543 1.3633042383767508543 -1.5917308979360189625 0.64974854188617603423 -0.89791337390860492818 -1.7027081184017505144 0.38388832916651977056 2.1906142464705409267 0.2574478225922229857 1.280701174187013569 0.92219106336706235805 0.25412683959987314442 0.54588558947747822803;1.4750455507300910263 -1.7572285008373715876 0.54710311576441872372 -0.24380721828220514036 -1.6901498817880238335 0.97330112079226460686 0.92752303345959741243 0.43684144379610784226 0.1571925603539274241 0.63872473882986735561 1.9914187238576881445 -1.7336896540519552978 -0.66029360293256977865 0.62475445353822278705 -0.17914271293299927068 -2.6929911434005200377 -1.1275689005663707132 -0.84119908417309896542 0.8901076178050572052 0.56144558711795100603];

% Layer 2
b2 = [2.7260647045356365403;1.2290129537126175396];
LW2_1 = [0.059853239255535727048 -0.036749913590756390358 0.03631562093666399621 -0.063959438877767324505 -2.4890861473140577509;-0.18625148839253108379 -0.014299932297371734449 0.029203001807979789978 -0.0530616820217556448 -1.3173209600607278524];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.186519601456839;0.194086922459235];
y1_step1.xoffset = [-6.33516792615553;-5.5949394467236];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
