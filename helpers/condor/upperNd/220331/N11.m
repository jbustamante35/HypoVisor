function [Y,Xf,Af] = N11(X,~,~)
%N11 neural network simulation function.
%
% Auto-generated by MATLAB, 30-Mar-2022 15:08:00.
% 
% [Y] = N11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1393.11332613899;-1536.39368511245;-1297.21956070728;-1406.61150927634;-943.856645236171;-1041.59962810042;-880.487755238884;-1039.82427031685;-1039.63685642552;-871.389062433177;-1366.48803574096;-956.693123630036;-680.147730212098;-921.08989661761;-598.591414439407;-580.876632624299;-551.182197797596;-718.800135403717;-592.713534032639;-574.91806725843];
x1_step1.gain = [0.00056226357275265;0.000598467455405408;0.000738305471844076;0.000661212932224778;0.000849497266945416;0.000825184857319234;0.00111862636063839;0.000977018037963875;0.00105250356627759;0.00122350837219118;0.000850216843127116;0.00118363136314495;0.00149979173900459;0.00123163168445208;0.00151147732646287;0.00143695061130242;0.00188736387650503;0.00148020354149523;0.00165395621102767;0.00179362710727038];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.5377990139996424723;-1.6784602755231632365;-2.2838100145511566197;-2.3676554710461248376;-2.4459317859767160108];
IW1_1 = [-0.11648407958910750315 1.7652865898490350816 2.1666558857753974721 1.7967926020499411788 -1.9337946478351950574 -1.4000493288585225127 -0.21529670519376173377 -0.34683750441087946026 -0.5905086525965672628 -2.1802029988978901542 -0.35037025822559098032 -0.4571726638847583013 0.75557942484560247642 -0.60681343071302129566 0.9286639797674975938 0.25925326724802016942 0.92342885982167088876 -0.28461972655573120061 0.75619425561681297143 0.42662780889258200556;1.5057687680942326569 -0.62795600441150800641 -3.1641169434526230653 0.39300087321370386073 -0.18310005840323495541 -1.735807036391124214 0.63049961107566621088 1.3668008103639175399 -0.58717837288146612629 -1.9532830042637552292 0.8236136475791604461 -2.0368829218406538928 2.3291737088054973448 -0.12344701737541188824 2.0575707879720583904 1.2081877568209804519 -0.42089939229390749276 -1.4604570857764418434 1.0387779711886258038 -0.19383939723606513628;4.0123072094941258925 0.41192029813165365049 -4.2689719116825255441 2.3909202855360049966 -0.400780156706934787 -1.813685167197769621 0.2784560911117633375 2.7459705394866738004 -0.08766118257992085161 -2.8506731445001878278 0.74621220511879438053 -1.0245903579847897014 4.3200060036889622594 -1.0945461447026225699 3.128013698167109613 1.9698576671170151542 -0.60777295421051868995 -1.9026449689817133137 -0.13381465363035907612 0.81754149021820554655;-0.09722938264109887152 1.7391292869001395704 1.5075671811203654737 1.3917576313183614989 -1.6357871738129834416 -0.44964707865737713055 -0.55214760165407961168 -0.55431479612134726409 -0.90885508970844686161 -3.7912065855394048164 -0.18957384083534095653 0.2509136576828961962 -0.3706711026703988221 -1.6762233207884711383 1.0566147495389712763 0.32589518148694202049 1.0118832263925519044 -0.060055135688106130176 0.54176959083061182465 -0.79172553122767341804;-0.27015458576129663948 1.8424350144895835779 1.930990036025789669 1.4238730286494798438 -1.6034878922713302618 -0.81793049397732153771 -0.48082587076085736566 -0.50370990897342504677 -0.79250800229986129164 -3.1392567832759938895 -0.0055204153413628831437 -0.07905309903167839769 0.13990649853894757126 -1.2392715631597248649 0.93506437839543354862 0.25987987422119396275 0.97150648712331566514 -0.054807507911067518402 0.66929644046040881467 -0.16826894911132439514];

% Layer 2
b2 = [0.22276093358402268563;0.051198716092944795975];
LW2_1 = [0.025837322948821059287 0.028246100157288317467 -0.01640317095956207033 -0.08294940556467238213 0.071727324147701221335;-0.45834903734434562228 -0.056844595676589136646 0.059949805024848201729 -0.72393920453295224071 1.1337200087133947335];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.169378034351272;0.171353577454135];
y1_step1.xoffset = [-7.09456364830656;-6.36942978137803];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
