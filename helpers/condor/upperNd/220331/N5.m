function [Y,Xf,Af] = N5(X,~,~)
%N5 neural network simulation function.
%
% Auto-generated by MATLAB, 30-Mar-2022 15:07:59.
% 
% [Y] = N5(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1377.77285376957;-1536.92140360299;-1295.58782968124;-1407.05757009879;-931.868345063901;-1233.42241441387;-869.508102146753;-969.688393899771;-1050.52296995267;-764.178713885261;-1327.42114796422;-736.854941904971;-706.216676091629;-925.413985953186;-807.004611946271;-841.565533412872;-589.390488603102;-635.612739129867;-729.402449359219;-496.831574266373];
x1_step1.gain = [0.000563527263617435;0.000606151446178302;0.00073224905292901;0.000659644739278962;0.000827665440661942;0.000755192413244701;0.00109794941381354;0.000979135046476442;0.00110286829705377;0.00118222784263324;0.000821373758823528;0.0010285635945172;0.00141194340986377;0.00126814975555997;0.00142228574033275;0.00131810814592141;0.00176064011483233;0.00156743000640349;0.00146775743701235;0.00189006148838307];
x1_step1.ymin = -1;

% Layer 1
b1 = [-6.0971303662993472372;0.96528264406023334132;-0.91330484323346927678;-1.6500355496901659702;-3.4272583181388918128];
IW1_1 = [-0.92896911120500791359 0.57057972139100932019 -2.2017746648772043017 3.0479274043872828237 -2.6052212501814175916 4.6685621859753361207 -2.3764874674760627649 -4.9810764524886508298 -1.5360812041727778254 -1.3309023029044713127 -0.76899433251231563702 -2.8055254385433396891 -0.14608384411371411193 2.2127936875006324335 1.4759149340489210456 0.21694504483556598107 0.67829439734198371248 4.0667352703379453516 1.2420729882178407344 -1.2129385913282557663;-1.3748698003518513566 2.4060017656961165677 -2.3268785407493077777 -1.2231056203878842847 -0.29445631167179942 0.47942607747484561331 -1.7185953722406537292 0.64246167220233152406 0.32984796366742369367 1.5221542557503962012 -4.3473279312926811357 -0.92101237891766729593 -0.78777972975088961238 -0.011847548423394638206 0.23625547282474301802 -0.79367946914302300865 -0.15145294374175122254 -0.45072184628634076597 0.13752447796925687529 -0.048059067052489967686;1.3370048006213302028 -2.4349870001453632895 2.3333367028619025341 1.3076444117574950177 0.17141916592277658959 -0.4705530032527204809 1.7902862297813324499 -0.63964056771175659133 -0.41425384473872900459 -1.5170762446259047351 4.4209719956715609612 0.93860088522717854964 0.84913300144445558182 -0.032611099980724790603 -0.27074440692009626996 0.76148126273587923851 0.14230519937386551521 0.48261144358235974483 -0.149106615662302322 0.039353262815120387819;-0.58378367397885622125 0.91744726119448549717 -0.43091876783570370879 0.37975557025658457366 -0.37885695117814638389 0.24154968123532544189 0.22792040826506237972 0.30932798870987970874 -0.73213505389173794136 0.71127295765306819408 0.32388421384013976745 0.048767427827014354913 0.60549295106124212396 -0.32950619635316275025 -0.63206723120758978585 -0.047393143596901700365 0.31811826288893474413 0.55904305914546870149 -0.41474681046961481279 0.31788682931573614132;-0.3920133704921233142 0.62943757420567403305 -2.3575344575149341786 -1.314566507699944653 -0.92418007279068359328 1.0430520796702043018 -0.70340710310738230326 -1.9535218503864590911 -0.064189494949944830848 0.77942375181047207633 -0.2843403156515889596 -1.0222164033265697114 -0.16150677745755367964 1.6158449975550028821 1.5586508821691431592 0.4488333060975477351 -0.16053573380213759236 1.3212133503710952187 2.3876928992999766344 0.070844369620950461974];

% Layer 2
b2 = [-0.063772319419251613515;-0.45017526287975739852];
LW2_1 = [-0.11411000585638839122 1.0615122238208825056 1.0568915288786511208 -0.33148238241182759189 0.10271953010211813673;-0.05537780545894077644 1.5694265556237518844 1.5558569883368582598 -0.54079446144902076909 0.077328096306874122279];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.138387327558382;0.144585655907974];
y1_step1.xoffset = [-9.30297976562322;-7.41730587385125];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
