function [Y,Xf,Af] = N6(X,~,~)
%N6 neural network simulation function.
%
% Auto-generated by MATLAB, 11-Feb-2022 15:21:39.
% 
% [Y] = N6(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1393.88465575814;-1535.38753792825;-1297.75279582119;-1623.16384702116;-1491.91484241336;-1409.95906935063;-932.393892367983;-1070.44078886071;-788.238991889732;-861.893265360996;-1113.56375654452;-973.902104544875;-714.378517485853;-689.995050810872;-593.272572900182;-690.050531361985;-543.472591505497;-663.608905644277;-597.067384322196;-515.854709054398];
x1_step1.gain = [0.000559252270919983;0.000600365361633003;0.000740217964806665;0.000661196099459535;0.000825518732708767;0.000773977856956673;0.00110373631249568;0.000968232026508098;0.00111012787587807;0.00124336461166308;0.00081020708653257;0.00117000435992585;0.00141607414046846;0.00123284015224251;0.0014323535978593;0.00131235345983956;0.00183557790506753;0.00156437781458348;0.00161445463822391;0.0018084632568409];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.4938457684063333186;1.4617249902479452217;0.26764672718902121629;0.15491190038415431074;3.9175852139304367938];
IW1_1 = [0.81451287922743387249 0.42722392541898235319 -0.68473004108849855331 0.0079778308157995997396 -0.2360970830877089921 -0.24887277002212548904 -0.58031821677294925799 0.22385726908742409336 -0.036570229092349498812 -0.68215139633614585435 0.17131514491218211016 2.0210852052460195338 -0.82028190394551725451 0.0092050795971114242333 -0.49628819617936226205 1.959821888458272543 -0.4762425808669782934 -0.15695770683114917965 -0.55325441030330413383 0.1737920058321469341;-0.8960644879626382675 -0.46754476414977746979 0.72866797307056463406 0.021094366226142413634 0.10388541566425060769 0.22256359781815748811 0.50313836075825524308 -0.25868842574064754292 0.026829140337689939833 0.63845777579581253214 -0.26406425935807986694 -1.8161858767859648811 0.72325579896179903461 -0.017900869450467732369 0.49134704438659970727 -1.7439220575968144011 0.55927371220484800585 0.053467649516310118696 0.64338519898690693655 -0.080900855147108846621;0.39108464031354073231 -0.40727105887245856897 0.092610400536277809325 0.0049273567774299059652 -3.0268715302149766799 0.58779807705962916486 -0.75228947825183389853 -0.16530422222143253963 -2.7325301401986132888 -0.13711890513529040314 -0.12409964131227389783 1.2246841157327683636 0.12383212927143666393 0.24429699948619171268 -1.3940551837577686012 0.25265981434537798656 0.055290134742672684964 0.062613714641500811675 -0.4675024946958359906 -0.22364667968084556149;-0.81175179836733424299 -0.75309156435383806105 1.1020112118177789462 0.49605628236317722557 -3.3130888361060879532 0.34054161673280775036 -1.0555076736462507547 -0.65726511543754040368 -3.0249868706810256747 -0.30622700995396051615 -0.74909244655904017041 0.68844220718969018069 0.55894651754481117223 -0.50766112707050314867 -0.78979872043990428931 -0.046947172046333515705 0.83277182130680005301 -0.15981798322286000502 0.65732376596797903456 -0.17831281659087341862;0.27583359734057533164 -4.5567664049844101015 0.6364083148205649243 -0.49001839961561977077 -5.652883395935511146 0.52401955563077795563 4.426185124824034034 1.4808860153254428393 -0.82744367993120815363 0.92833330751968357042 -0.48007494383891652356 -0.30488282142866318658 -1.2027891841426234798 1.5699636483571648427 -2.6769576694402390515 -1.758512451770223084 -0.076208084413749030417 0.70697239719796212132 -3.3797064089727681946 0.070230699879306607292];

% Layer 2
b2 = [0.21922893222081726861;0.1396756921733471879];
LW2_1 = [0.70330385467441414171 0.78102988842793963364 0.079981278606408232057 -0.076809103025135355702 -0.051761271939567275735;-1.3500594893186366185 -1.4714554703159667959 -0.13856196097817394253 0.14200994071489597692 0.061255762243198688677];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.146000651272449;0.148270563457023];
y1_step1.xoffset = [-8.50162591476932;-7.34856380478953];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
