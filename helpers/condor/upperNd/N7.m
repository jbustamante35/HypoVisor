function [Y,Xf,Af] = N7(X,~,~)
%N7 neural network simulation function.
%
% Auto-generated by MATLAB, 11-Feb-2022 15:21:39.
% 
% [Y] = N7(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1394.87661072773;-1540.39069687624;-1303.84291384707;-1611.65837876541;-1474.62958739662;-1384.66574790271;-898.767518695244;-1008.32902911383;-868.210857563463;-768.92138297895;-1368.77231818271;-723.778812431908;-707.643262715436;-937.120346959684;-780.041785971988;-865.568177192799;-586.599843478717;-593.285078048694;-618.539291310522;-585.569242745908];
x1_step1.gain = [0.000560269531887837;0.000598802540483328;0.000730815429615108;0.000664109205045142;0.000829335817301649;0.000798570023645578;0.00112910895429752;0.000964731547840999;0.00104175759053146;0.00119508838074848;0.000803164787621213;0.00118150617694988;0.00141896831546824;0.00123446207000775;0.00146009325572416;0.00130876048893336;0.00177440511989241;0.00161330792443645;0.00163914770590949;0.00180677681645882];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.5791178677455750545;-1.5243717121379065649;0.72151025265041257573;-3.9498629845617214684;-6.1316672915308094716];
IW1_1 = [2.565368036107118499 -4.009106707398346181 -2.824742917830584954 4.3652462114287127193 -2.1645579561660723833 0.53416691739289390295 9.2717271507614853476 2.2933280181416262344 -1.5606101872307049927 6.6021032334228548777 0.39529447528129468825 -0.69224546685170207372 -1.690999045228384734 1.4063112781377939964 2.2545965614545542266 3.8138381243865691062 2.2261849723839262083 -0.96250105636122862407 4.8949430303923362473 0.064846361941185579059;1.338342095972441026 0.9456146100753350936 -4.1960815928451902224 0.96241401520903113731 -4.0961214632128877255 -1.2567587248902556407 7.4681348362650386008 1.1722690204835692906 0.12868004595375504007 -2.4288131426493277942 1.2943729012014622004 1.8087157698949476448 -0.4269606302838698797 3.499020259349176154 1.4753187396279558996 4.0436692835506136134 -1.059330284199203831 0.079963534301492389389 4.1924846421701777999 1.6748176890000716632;-4.5339640549712001416 12.917888621593419884 -8.1318138022934718379 -1.3297215140306994918 -5.8414700152516108034 -3.8136950434202891991 -4.7414530600467905685 -0.89088673048453770331 3.6589855191910114485 -3.3320931196477086011 -3.906000879066463316 -2.0187070640209574535 2.7824389352607896697 -2.8495800646090683195 0.4761248940065764268 -0.42331755718404101563 -0.88150991576113124637 -2.8407968283296836098 1.0019837758554792639 -3.3900785430994018199;-2.1806151296217004543 2.6765221753532815185 -0.087472940930747727917 1.4954981355887966288 0.2924697746102059015 0.25034713327657581727 -1.4094954975591775792 0.68909066146851050139 0.58762864532233094472 0.80090666259539544658 0.80313111161300343444 -0.019580763999885918147 -0.29437569465548224512 1.3245823327018464433 2.869455982398707139 -0.17907883867396520716 -1.1346345197663560977 2.299620427542338863 2.4043720877559335847 -2.868694254398077792;-3.428148360151926255 7.1483384167891426131 -0.79215463599518587401 0.34856519977913547059 -4.0414082997745133241 0.67551901624029098148 1.4157021823170012897 2.2137177086922084079 0.8850060754868633861 -3.5899279160952102252 0.31301873843760774641 2.0418944136036825121 -0.74947149478063290751 1.9383456774677438883 3.0471364636426487849 2.1234812740273008025 -3.49120573867005346 3.6653869326656280947 0.15326423215999465666 -2.4104708030478239067];

% Layer 2
b2 = [0.25399293724628790869;0.14108190073501050699];
LW2_1 = [-0.043114454469364509037 0.024251552807648315419 -0.025493503819972819502 0.087696550101687226197 -0.093324992577880253042;-0.0033818353601221991245 -0.0052231763745399940185 -0.017202475132807586167 0.0077232592512675099505 0.062114374932793252337];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.150319579646711;0.158588392242075];
y1_step1.xoffset = [-8.21802151106181;-6.78218663158981];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
