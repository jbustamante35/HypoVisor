function [Y,Xf,Af] = N3(X,~,~)
%N3 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:44.
% 
% [Y] = N3(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1382.9564671721;-1560.11620673384;-1358.31240998558;-1626.86139609937;-1405.03354859756;-1407.82654124403;-1023.29533891135;-1021.60178636856;-825.727376942993;-867.122663678122;-1045.03064220066;-831.413242049361;-703.716417561345;-758.310119617542;-709.978297931826;-607.004330793766;-725.746324348772;-610.342813597575;-795.947198596345;-671.005200272361];
x1_step1.gain = [0.000573141094368391;0.000588854657857965;0.000741040924187018;0.000679044690731966;0.000884955277528467;0.000800332464432733;0.00105656147098928;0.00107007447712446;0.00109519018752792;0.00120661763062094;0.000838978038066071;0.00129604685056292;0.00146503535909728;0.00118009927876649;0.00150554129203875;0.0013936141890039;0.0014006397056617;0.00149099123575846;0.00136382420405621;0.00164161443046155];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.26328467078448741789;0.16253386065539507377;0.23656740967366546302;-0.58300742763576729466;2.0069214383135833835];
IW1_1 = [-0.52194039634606670397 0.18460323013823487504 -1.187673970222349551 -0.14461972285288149376 0.40083264787015371322 0.33298482440245047442 0.8600639605268232124 -0.16645890642925925684 0.021111983273474927564 -0.21850993843434782238 -0.011001706389192587865 -0.78904836089278507227 -0.045146928622227563976 0.051071963522092173049 -0.20471509864885181762 0.1495635292232503355 0.35669554746759596364 -0.20713865744236537036 0.8789034602968391896 -0.19111218149252193199;0.11430957626282202411 -0.23715659702261496222 -0.88647963420912379018 -0.5743964680610750273 -0.44274013846889864743 -0.089663563791453154694 0.50447731981004384494 0.30403699608330403414 -0.31089561068255883169 0.22719149808846969552 -0.22013269013208278113 -0.89752272845399350132 0.4896256564887737639 -0.49010440100801450081 0.081762177316343151445 0.19611475406540984645 -0.14859377621128846969 -0.034911582091859773291 0.50916621257400263012 0.12597229208153382096;0.20256513986481239353 -0.33755011436027515526 0.41722200766815215056 0.045296697114459875955 -0.74778531783338386685 -0.19793584554482615556 -0.054207508018904913827 0.21078977498999798557 0.04467440731156278183 0.0054467870414319202038 -0.34715098026236768103 0.28156535436568957964 -0.033955673539226433055 -0.090035850808809270163 0.10742958543193749377 0.092891514023172735981 -0.16802853825079366867 0.13645698126673821982 -0.43900525132197931732 -0.0086676013915713053665;-0.03763739406440226587 0.13931133123434241705 -0.19643328709471449822 -0.06991543014496387487 0.33440576630637225408 0.055734775666380666215 -0.014693828609332087315 -0.073429345198331080757 -0.050541058532919243274 0.049441507078766926131 0.17424877763518853424 -0.16226947200429728269 0.079789109101692123893 -0.007831186983861348691 -0.024463036334069803573 -0.047401291674520014408 0.037942440688941966864 -0.064489885382399844693 0.20384422751877184776 0.02691131729282179863;1.3912276373431153864 -1.3697673808431087838 -0.89798387070555751865 0.84344068012818507185 -0.44814191739066472353 -0.15006904720166455713 -0.14228563201031990681 -0.25010471199503475637 -0.54792310415789169387 1.791248868969020025 0.90836083247090082526 -1.0154969857402524891 0.80315686050803059004 -0.81635451684573789866 1.091712534868854334 -1.1546538526045304618 -0.50071758138583355446 -0.58829497858038037883 -0.36561094170323693575 0.7135858993565449282];

% Layer 2
b2 = [1.0682735875585580576;-2.3578196196699052756];
LW2_1 = [0.29992308186397143022 -0.26351912690534934347 1.1535016973953942099 2.4623810795107803351 0.032474520718549240716;-0.61658497112635335391 0.54202508717656838755 -2.5925864476217044263 -5.6591709408928014824 0.20955601931900136314];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.127103271350476;0.127822507594436];
y1_step1.xoffset = [-8.61061060743653;-8.91035382211274];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
