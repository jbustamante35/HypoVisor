function [Y,Xf,Af] = N11(X,~,~)
%N11 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:57.
% 
% [Y] = N11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1404.12771607715;-1552.42453279684;-1365.69825995554;-1651.16343534692;-1375.99954965874;-1390.93690754949;-928.35139445973;-1086.59660979394;-826.158049404395;-733.170668126642;-1334.08341828065;-782.032679152216;-717.74195165551;-739.16189382394;-616.045794720824;-850.60144921543;-496.827968101112;-752.675497592141;-604.780661375885;-543.565929150823];
x1_step1.gain = [0.000568016192987367;0.000604764465516452;0.000747053570966599;0.000654647390512294;0.000873985246604089;0.000829822207739876;0.00109431630197405;0.000964889627243375;0.00110650117929497;0.00125319664974062;0.000881413722066804;0.00124532300918909;0.00137970021136138;0.00119520402820501;0.00148519962277223;0.00138944169848283;0.00174136360855859;0.00130541299945328;0.00166008683785953;0.00170319550544463];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.6842353222732793228;-3.7853877824838590982;-0.20527345660445545095;3.8411771985836526966;-3.9455798735768037311];
IW1_1 = [-1.9381481795360753217 1.0886611975876201441 4.4889260655389247034 4.3632664086087471489 0.59443384178930591677 -1.86137113499850404 1.3899572660713734873 3.6227180445054054658 -1.7301543054443930814 -2.4874287943447654925 -0.62525164161291502118 2.6533263936578221909 -4.0291866996208858254 1.3696175691096672544 -0.25612918307774790172 -1.3064134207119191267 -0.15067504399877360011 -2.677428892904504476 3.1171461971971434757 -1.3528721077550354135;-2.6935898539967388921 1.1537021090474461893 -0.57470771771920592386 -0.66184453645144369904 -0.22137750198036063032 1.8682309835867352277 -0.1061511981005225369 -1.2149049604772688138 1.0869640000966103166 -1.824640882972049738 2.0934810234231928661 -0.21801737019541597706 -0.051044914663296150903 -0.40167063354249465945 -3.1022698410206444031 -1.9180631287085767589 -2.2340485712413724606 -0.38167231591394878976 -1.2072706630665261951 1.4370913399206752814;0.98707283989827310222 1.8578158512326288232 5.5278912739588639269 -1.0485151259373879373 -2.3434686977030119159 -2.3466505420669929727 3.5074335532553515549 3.690032549101785353 0.24291864467750706735 0.33099675757480384597 1.1016559064283877323 3.1566903613324091005 -3.8255385991707369087 0.1446864117693700269 1.2317671243459309416 -4.2709598696705350918 2.8646231900508976054 0.87063944356424860516 -1.0213210844233817642 -6.162480307510576516;2.5433069854168053325 -0.96445256723883687755 0.71751216308483134476 0.62661001427583518097 0.033546300942484535978 -1.8353242949612451618 0.1341714173231558227 1.2973616606983238153 -0.97486942057670511463 1.9239460552841829433 -2.2791240098608600562 0.095909917766887925472 0.11732809915350381202 0.40035459881060087017 3.0666208854078211843 1.7493633527891592205 2.29631417176055308 0.34935984605455994156 1.0538084925083144316 -1.4886127981094896544;0.36439985715823186574 1.1260314137704179327 -0.35992181245235405074 -1.6359380006599879565 0.322690989946957274 0.035271921820139856552 -0.7453755638120621585 -2.265132715019535059 1.2409192120243546231 1.3842929254121432159 0.054543608012239078175 -2.1754931619625028638 1.7324899379844587166 1.123281397090698519 -0.3904020396844386509 -0.72676970512323979534 -1.2276827904786702383 0.25761843873928547133 -1.0392716684071379163 0.50116582684392574354];

% Layer 2
b2 = [-1.2125446577005130067;-1.4821686744950581804];
LW2_1 = [-0.027530270408761804701 -1.1332130296800100311 0.018204758424743516104 -1.1587360351512565604 -1.2047639839012473928;-0.051420635933392813688 -0.5897082454262214668 0.0062459160674129161894 -0.60254639172495461086 -1.6010904497803886137];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.182244981540734;0.188344251223989];
y1_step1.xoffset = [-5.12585635426922;-5.58689201934098];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
