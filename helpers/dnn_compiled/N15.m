function [Y,Xf,Af] = N15(X,~,~)
%N15 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:58.
% 
% [Y] = N15(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1401.8229225339;-1552.71485232591;-1302.67732723158;-1444.05911138794;-1375.82657093672;-1006.0534865121;-906.437700451796;-1080.99588145515;-1004.30896133378;-871.727677209668;-914.052906317685;-824.52750604568;-769.568316323091;-726.321088286472;-592.891335768254;-580.370217385216;-626.047565170425;-794.112320376744;-565.643880916649;-618.430846569384];
x1_step1.gain = [0.000568520642455332;0.000608080954024073;0.000746171599035892;0.000649723888748236;0.00087250220172164;0.000831577979446659;0.00106492375250942;0.000961901817546172;0.00106384729011913;0.00125560684020217;0.000894151134082252;0.00126143503911976;0.00137718679276352;0.00118747561481832;0.00150499534152296;0.0014231002184062;0.00179471347356953;0.00131029600884343;0.00169918569442965;0.00170772626008972];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.3519298943888933273;1.970320174123787238;-0.028075089747482219471;-1.0812832905622213886;-5.0963746662826228118];
IW1_1 = [-0.16525657756804634779 -0.74684104813035923076 0.69391173538766859341 3.5990283247434802227 0.72820151307039071575 0.51170710152835874318 1.1735461620749407796 -0.0033073305561728272295 -1.3133690794522712153 1.6122696339106219465 -2.9193154712362505698 -0.8388069326892977351 -1.7259639094566812112 0.18395965646452633324 0.13088002161215089858 1.9689233999228030747 0.13077788574496396201 1.0840518309642235284 -0.43527742831957089154 0.85500123375671543968;-0.57161407611994574651 0.95851401495575438982 -0.87063399964178112 1.780173086362626611 -0.42817123969897719071 -1.933086984951295495 1.6188102484578859031 1.4027748386387852708 -5.6320210227109797074 2.4027826162213332672 -3.3400192122276042284 -3.8645100653997541684 -2.992531617751091666 5.6072955235153250086 1.2568105793922026425 3.0856201551299640151 2.550422581634019803 2.3135558183539752797 -1.5124533459455518081 -0.77270338046490749662;-1.1790281198206564728 3.5814502386590798544 0.50836099921921396039 0.63333283878664303757 4.0705518340641786423 -1.3290968593295628963 9.1151756615144261531 -5.7379598403018858832 0.76298216942659136119 -0.92523576484206815351 -5.1956024990963092236 3.3585104028098444751 0.59978481778790293522 3.3063612816046861198 6.5662257093948630526 6.3921521015897351248 3.9423162686527803977 0.91175659116868057463 1.7189634650422436213 -0.70668072342621535142;-0.60197591459016086546 2.0235246582233243906 -2.1037452121548527728 -4.8806447152013276991 1.0605264262742550851 3.2535738368836502055 15.936662385626599203 -3.5569951190727917556 3.3979454940486988335 -3.1260507250749123287 -0.82841404971326348949 6.4235017485734084985 -2.845374601087798716 0.80223608020822112508 5.0850145813978295806 4.6598623091424027365 3.5321539151258978251 -0.8439165198207325691 3.0701633003270303313 0.023496544953784004317;-1.7628339569161741718 2.1504653037652849967 -2.0074588120812890679 4.8173475729234684906 3.7594081645765897726 -3.0889532314388392642 -1.1765875138062513727 -2.5112738138661314657 1.9393785558632516963 -0.072317139362421414828 -3.1249008603116985583 1.7014922396022327256 1.0143775364185350085 -2.9301802751365455535 1.5327328348508888478 2.1616482147842437378 -2.8070906032382580975 2.1358374553908294757 0.25441332632781155088 0.92040459610732727747];

% Layer 2
b2 = [-0.1310607610366525122;-0.016945702895860489945];
LW2_1 = [-0.015104173525215711452 -0.0036725434466613974399 0.023941073038915045013 -0.023122625727191987999 -0.016659031367609059004;0.064529119727956982255 -0.032222328862512750192 0.028037860248258866108 -0.028532145575493446377 -0.055317328823084252476];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.188405334235445;0.198698047704637];
y1_step1.xoffset = [-4.78466697879869;-4.87382143013927];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
