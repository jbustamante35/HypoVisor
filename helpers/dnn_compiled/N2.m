function [Y,Xf,Af] = N2(X,~,~)
%N2 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:43.
% 
% [Y] = N2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1460.71585449246;-1585.42900888133;-1391.12678829287;-1395.66474532272;-959.808268385496;-1440.99654745471;-952.310543464957;-829.671329288295;-970.032182859424;-1085.7764813536;-1109.27678503578;-873.275211309716;-688.607835374369;-583.352485539203;-683.011348090164;-727.90430958692;-646.157385786052;-746.405869314422;-638.389057644233;-503.961990708314];
x1_step1.gain = [0.000559513255682675;0.000592572326731803;0.000734361844922011;0.000670063195030401;0.000767970132446477;0.0007365301675333;0.000962478115156866;0.00106570270540209;0.00108188286815187;0.000829075934513811;0.000922192792545784;0.00133499600489503;0.00139845316644473;0.00140806046698596;0.00143130124220546;0.00148675579316224;0.00118619567885851;0.00152135151631133;0.00118517363786924;0.00185369579898989];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.269548644297298523;2.0717337797414812073;1.8498540223121582304;0.58150324479037363012;0.24156034477655324855];
IW1_1 = [-1.3288347300285865416 5.6582153697814252524 -0.24829208991759602054 -0.91482647399768057817 -4.1783821476442737364 -2.5387910073370281161 2.0542912909668809007 -0.21249854720813976527 -0.5121919152174700951 3.9099582255549627519 -0.26034940924947708174 -1.2161200741132398573 -1.963411406528571268 -1.0479892316316548051 -0.60999395626776031776 1.6139119186903954084 1.2330202328269321832 1.2283384244745549907 0.68707245903550917543 0.25854751092919664446;-0.1991450539328467606 -0.6224041929684229757 -0.1754620613815355834 -0.18104720763828288654 0.035300232517546450972 0.059980009153765945218 -0.46318544232707808961 -0.066145718410277692945 0.31778803260202276304 -0.41651415528856600146 -0.13699512493246887579 -0.049053004023195220795 0.1792666514635705699 -0.10153330814706656993 0.09329414330882550288 0.088957215568164590969 -0.083630046209976688365 0.031410819658111807651 -0.097085921080398068783 0.45961027307880525372;-0.35731601841589910595 -1.0859298698323995858 -0.072783112418834949864 -0.48754432375455269977 0.29441663893970254628 -0.14109911478772294013 -0.6592970180129735791 -0.49712491906779271433 0.48361445158133264943 -0.69964639455673904855 -0.28428159852422946186 -0.31731446332339802163 0.29760544785455128602 -0.32782245121725311909 0.083611015319223547237 0.38231701211890595227 0.28238513976450868581 0.013000652066481984542 0.34999740447365729201 0.6605130348135329621;-1.859893536822064819 4.5581080640610585064 -2.896908897041114983 0.38389764578449497856 -4.0251083226509472013 -1.194850664205013846 1.2880286865809491559 1.2328030293661960126 -2.4473950910136856862 4.0891397431844778154 1.1640011083072232534 0.62533254740402188787 -1.1074195327390821131 0.23270592513332349904 -0.41535790071089018216 0.15734869218798841484 -0.11454692133380439678 0.65878866580588968382 -0.68255731250521400888 0.95671509865291803898;0.35695997927253836357 -2.1847429811108374231 0.49494811277850969677 0.22647556618557942998 1.5936300103149723117 0.78352483019957519517 -1.1942029954388697632 0.0076426325791819887251 1.0254400721959593401 -1.4668890251514874468 -0.6668603225863771744 0.19076054041460735466 0.53251899323984797086 -0.27445850238303926005 0.23048353319982284315 -0.14852355716967305388 -0.64673199035269890445 -0.11503158535129590079 -0.073520534461274461568 0.13377238830043985951];

% Layer 2
b2 = [-2.3406974064104169031;6.6772815031177676914];
LW2_1 = [0.10264374206088222596 3.4168787035922569828 -0.87639441605543488834 0.011220062342528779042 0.1301816352374576824;0.094452569367686450841 -8.2892137049054266384 1.6015108661752897046 0.15913044166785339506 0.35020567610234909495];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.120721912092227;0.0979575971692153];
y1_step1.xoffset = [-9.52980150727585;-11.5726568011762];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
