function [Y,Xf,Af] = N7(X,~,~)
%N7 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:56.
% 
% [Y] = N7(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1406.65275630039;-1547.95055115146;-1362.11207241648;-1649.343242692;-1371.85876036395;-1392.49655148764;-953.334326251009;-1073.23907335175;-812.122210385586;-838.909719884306;-946.716703064695;-858.989768759872;-693.719412974369;-964.445175720111;-726.854234196342;-805.166945830388;-570.613853928229;-632.923431358781;-642.084958649691;-526.068265809511];
x1_step1.gain = [0.000564864716180792;0.000599786024531136;0.000749613067088045;0.000666770387808447;0.000884887878994735;0.000811917898678101;0.00108262022025742;0.00099166429271047;0.00112090421837834;0.00126886604425753;0.000866052808957221;0.00122566652895962;0.00145679267041652;0.00113280416736375;0.00149076304348991;0.00136646296951299;0.00159224626860098;0.00145655709689241;0.00156973107139676;0.00170813702462618];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.8015029117015592952;-1.1978160161066890854;-0.074981774771138945401;4.2950197535020446793;1.4312629824938645218];
IW1_1 = [-0.54841435952858630376 -1.304759148681063019 1.2695474914678834821 2.4754730726878380054 0.18319316322556833398 0.47369535100661902538 -0.87491308494053743328 -0.21510709531912064474 1.20031606776737787 0.0071641589902089377467 0.77271695181300381616 0.25074960395539469538 -1.1676189467108473163 0.75424422603456076075 -0.32845612702814991346 0.57598845373671803127 0.25035754973566187731 -0.16131299772200086151 -0.37843345504165198934 0.18575052133024994028;0.69838247955264476374 -0.80877969796966686644 -0.32036579107434232094 -1.1096224080506496001 -0.4599029165397196528 0.12099974615512837373 0.97042282076985841854 -0.52357233988792317714 1.054732097173284977 -2.0398713480389139008 -0.20366144074512596007 0.094077771762808723444 -0.45542826768211391864 -1.2201312919141560354 -0.29342178710384891893 -0.18886606787535603624 0.32757487913759364417 0.44621231713849707212 -0.55686727564622806597 0.10996685604978299888;1.5177387919186351439 -0.21608213193845332567 -1.9620128243009127278 -2.8041212641511061854 -1.4301764770501717017 -1.2168817935128501961 2.0376752667326489821 -0.3384942876863581418 0.61131255300808040598 -5.311695775570226985 -0.6522747659912763174 0.53023706915462964773 -0.91651741875975389906 -0.81915472183004789386 0.43352291671835524456 -0.37169533703511653533 1.5207526900919110524 -0.25752789420087962569 -0.62333622023017343228 -1.634164558407766199;2.4639220619143715751 1.4466881254329466699 0.51148342465494112119 -2.0855017123142225444 -0.045264308432740402166 1.4009178516623912447 -2.2825966300128173181 -1.6035203090323451036 0.78390981162922745984 0.26868214451276667409 -2.4490635153185991157 -0.082405145469318874518 1.9924962450658623148 -0.057076119052634127771 1.0877859867384422898 -0.50416276843753049519 -0.37546709566032238081 1.5534796727856809984 -0.33759963472529525008 2.5811879278190144049;-0.78911754804211353687 0.11746407637041517136 0.67564077166138425401 1.5295677919584420579 0.69949988620279746065 -0.57488969840074743978 -0.34582050574807365884 0.78619441104164844436 -0.97928975160906117647 1.1142291108555175683 0.25125564773313824318 0.11602880663658005078 -0.31956605528287185258 1.1639997322800339496 0.026162471019869716626 -0.10793149070050687965 -0.75352343480947259202 -0.068546363316640532282 0.40352008082262874611 0.33129782192427997822];

% Layer 2
b2 = [0.16269550184857972663;-2.112731249418807522];
LW2_1 = [-0.14277051594603171192 0.012449949207952098335 -0.020723805191329738168 -0.045392917314909228543 -0.088946574781399750931;2.1675987765229676185 -0.18747488992840355415 0.043317048808829854145 -0.0083667070331782302656 -0.15509716175910612246];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.159153096524642;0.178229155203412];
y1_step1.xoffset = [-5.63251577411731;-5.81953235436016];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
