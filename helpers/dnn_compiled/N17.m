function [Y,Xf,Af] = N17(X,~,~)
%N17 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:58.
% 
% [Y] = N17(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1398.01232632715;-1558.72771217779;-1320.60602271058;-1646.59803984891;-1365.80590900227;-1369.30866305985;-905.607459304955;-992.261128808903;-1004.35862246869;-714.781161837535;-1323.73893969166;-758.416800783098;-704.950163166285;-688.866355336957;-623.591741444561;-601.783882048332;-622.847571156339;-676.130147114152;-613.627066847452;-556.53572322394];
x1_step1.gain = [0.000569292038590445;0.000607630109204841;0.000743801025821595;0.000649348216583807;0.000882662970343073;0.000841179536608005;0.00108271527297457;0.000966604146653687;0.00105295166111167;0.00126698217666252;0.000897238599692822;0.00126055383466507;0.0013500485969922;0.00123467073558046;0.00146206439587843;0.00143070275025445;0.00169427347092261;0.00140987375937821;0.00163449827098789;0.00170425146314999];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.8525198029200649064;-1.2795945109952593377;1.2081512816186283921;-0.9372920757019941318;2.1985297444061986383];
IW1_1 = [1.1644419762296531751 1.0078559334971866068 1.133422984373617437 3.8321484897776887379 3.2906448276172639567 2.9339181094523425486 1.2614465348209991102 0.92660416872942064082 2.9200837382688709098 -4.1585281984673256872 1.0559956869442193028 -0.33457427961869501409 -0.18599959175692071245 1.1128717082073187328 -0.037809477443683625619 -1.113124408539545751 -0.23965614861658951495 -1.6434667698637697164 0.76919686922833285792 -0.85926532990698489822;-1.1582784888460615491 -0.69652895949671100873 -1.3399509970609484455 -2.8471150749196358909 -1.8369139495619783986 -2.290249185456021408 -1.2692950310129766933 -1.2436909889880296554 -1.6842500278633301125 2.6313637426529363772 -1.2585290232694550383 -0.2925758134572225555 0.27458474955299083664 -0.27427683798594337805 0.16873029778974896198 0.4060095634441330259 0.54211840411668332784 1.339676296830209834 0.13939147942333776631 0.31322004682294607436;1.0555886706458723623 -0.076342217190225492018 1.1828197768479618013 2.5083180221265601872 -1.8934802265622818762 -0.64421364534843239547 2.1385760920731970991 3.1589824136976791813 1.886959168049399338 0.17557181630311255449 0.54481884641163580429 -0.62352038099594109255 0.92589259580447647036 2.5001491938250279823 1.4221806558338871973 2.6882172567560913556 1.2534126291660760977 1.1574757816463057125 -2.7240184955128130539 -0.77921971185325700215;-0.29870796447413455743 0.016359079446816152115 -0.36224480976234890717 -0.44957280372294400328 0.48042325017866593928 0.72949463408668402398 -0.98381747148630593891 -1.0323268640078886449 -0.51400095444508098197 -0.37901058390203484771 -0.14885530996688814409 0.18613480239966911922 -0.13526066533759706356 -0.67524654533388162037 -0.37333011092081630489 -0.74739801672185923742 -0.57595110841276087044 -0.74934944187665220028 0.79815769875169007008 0.00055115691101956243436;0.87367477120676695357 1.2140058559948714301 1.2504743218657941028 1.2001499926786933781 0.31215662020950957212 1.2457223558190742008 2.2643494757948667839 1.4811448134615732286 0.80837521102782239346 -0.28588392234512483014 0.49557725077898484578 1.128386948350720731 0.26317264263754386322 -0.063799972597750664871 -0.89698576302780030911 0.45668280339955774627 0.30189647207494529901 -0.15223387516554051646 -1.9256405521595572061 1.0745410478484709316];

% Layer 2
b2 = [-0.052504372558258183279;-0.035333994251554888544];
LW2_1 = [-0.20761580197765844291 -0.2345811000349592168 -0.059022544747052124725 -0.10007099322883124259 -0.10822837872061753794;-0.021117182763006961399 -0.05222787164147819905 -0.014744445129601411321 -0.029862939892470772435 -0.037656482557445178361];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.197572012956706;0.212405345894074];
y1_step1.xoffset = [-4.54784971198023;-4.54141879355268];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
