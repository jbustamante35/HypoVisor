function [Y,Xf,Af] = N19(X,~,~)
%N19 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:58.
% 
% [Y] = N19(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1397.06814325962;-1559.65603882303;-1388.77681602392;-1641.85770339766;-1360.21042863669;-1385.82855515347;-918.805818995571;-1057.02419686022;-906.829014464261;-874.523493954486;-921.264418488077;-841.359865201387;-759.613099173437;-711.905264752044;-613.840767358395;-569.450156811009;-625.609319097037;-732.170051393495;-607.478192481292;-613.157643344796];
x1_step1.gain = [0.000568386975825569;0.000611092034897148;0.000743391696768192;0.00064747839895851;0.000881637528420089;0.000833637139604664;0.00104107973039847;0.000989915929859333;0.00104181148793876;0.00126151559300898;0.000895530951893163;0.00124346942464519;0.00134440800006154;0.00120417626640266;0.0014654760673996;0.00146711083938518;0.00171813197121527;0.00136132189694139;0.0016669991049106;0.00170117120048127];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.5125712616614661599;4.2269755005018252447;2.336853441970575318;0.79442888082477725042;2.5816444696979785611];
IW1_1 = [1.1479755826772086724 -0.63469277108795574271 1.8341935051337026064 -1.9293009022131075714 2.7264612372933614282 0.64757868922294359315 -1.4150647585686841889 1.7690421770244153521 0.3715744304388481356 -0.67769213967839192492 -0.32998025184903451157 1.5164771797086020744 0.8451148544899483861 -1.3769619670719719373 0.88270765325981326299 -0.35288694794528085996 2.0024111588921651439 0.47778795394708561961 1.9892205658041293148 -1.1047675731889825546;-2.515614607895925392 -1.4616190461643923104 -4.0042976193062527202 4.1505900860606557146 -1.726147140332545904 -2.2296066009612003356 -6.3531540454240786886 3.8853240227858387712 0.24984692218623139048 5.6986440799970177196 -1.9488966396955700322 -4.1884571945135746773 -0.61929748678174378895 1.1991191604725750519 1.6894118288165846931 0.11521361882761875506 1.6070196407028740637 1.4307459695869044758 -0.87148797399540378628 -2.3356335561870795736;-1.0839516501335606513 0.58895366560615980411 -1.79884120018299698 1.7116885888530344317 -2.5472207409848257598 -0.64311362451025300135 1.2190030398078910423 -1.6014784143661557891 -0.44188260090973435767 0.69687264252626746064 0.38997183809076685357 -1.4295473378796683672 -0.76422326862371947609 1.2940897090434355654 -0.85455269861143678956 0.33327636766185037009 -1.8627431176019353387 -0.48104091826064737658 -1.8548253506436900295 1.031063497847292787;-0.8996563329884352811 1.3789877581578244836 0.11585385712787303614 -1.7777537867974753105 -5.09202670540020641 1.2753998950418639069 2.7937856162208798416 -1.4692259692468243593 -1.2999418182134192534 -2.3262608360988514811 1.8530521783908668887 3.2300663346535509746 -1.2176277045314576331 2.3696402539790297759 -2.9814573643471899977 1.5078442102309241868 -0.31976928617700234314 0.62692297863054036178 -2.2853958734701818045 -0.83707110647273852422;-1.0111666683764981567 -0.04413212692002949078 0.83488856660967358803 1.57049631634235487 -1.3376908357169685626 0.053924240859888131205 0.87026917765762712431 -0.12551872197226979222 0.60208933648849927156 -1.4546175861307126809 -0.87090374176160822994 0.50309531803270901573 -1.5588549836229377288 0.26209226313534111918 -0.26342235708886463375 0.46239889551034979442 0.028638537284965633056 1.3938153237209729429 -1.4133700496548180503 -1.553316437366351721];

% Layer 2
b2 = [-0.051773583144874534001;-0.16759840862342917367];
LW2_1 = [-0.583048289647159379 0.021233728049895015527 -0.60153675211084844943 0.014341083630651403624 -0.05598757384796131803;1.0226209336794658267 -0.056439844326333858671 1.0534907658415992859 -0.039690483220719906254 0.16754411016602616114];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.198995148750188;0.214136821457197];
y1_step1.xoffset = [-4.57084960886807;-4.43703705717225];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
