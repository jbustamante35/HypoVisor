function [Y,Xf,Af] = N6(X,~,~)
%N6 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:56.
% 
% [Y] = N6(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1407.96999434082;-1551.03375532654;-1298.77565548822;-1348.2615203929;-1395.71696698596;-1042.35432351761;-1197.19645942286;-1073.81396775958;-819.433875148025;-767.129395561886;-1058.46489010146;-864.616246129165;-682.182833766111;-696.780313790292;-695.419838373125;-667.459660713571;-696.141973271863;-678.783667142422;-660.78177684013;-655.592150648173];
x1_step1.gain = [0.00056370881760125;0.000598549942742573;0.000754674009704851;0.000667309228075279;0.000880010121050702;0.000819840672345746;0.000961517174477154;0.000975858918159675;0.00112244052568611;0.00123423927448752;0.000822067084885636;0.00124430962955872;0.00147546022332681;0.00120065434589534;0.0015270380487294;0.00134517692343995;0.00156902159396335;0.00167582438174053;0.00149444969268361;0.00170649701957047];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.239727854705932053;1.4406944412880018369;-2.9326862812734697528;-1.5429237621451428186;1.309793046712533604];
IW1_1 = [-0.57400473871513035817 -1.4749573074428399266 -0.58246784956364550112 -6.754339653221699713 -2.2978589758742962168 0.026674582395703277937 -2.0446075842061834926 0.030378011580088043475 -1.94973299699456315 1.2765053915051973732 7.2600042051313611324 1.3195427760044546872 3.0086906439451426287 4.3851101447771174691 0.28326682092950344893 1.672551623404833876 1.9203625458081894362 -0.38265155541580869736 -1.4625014176156927448 -0.24191590406348345565;-0.13160239162671813484 -1.0144367885002845142 -0.23248272060309607689 -0.73462962618498273137 -0.7187896206542848665 0.43083055907074274682 -0.69361974997030828582 -0.45475982986607432768 0.26243827191663493537 1.0220265014850351548 1.3016377190749941484 -0.36950421061357857644 0.57849280290662319359 0.37837639626480001898 -0.10834095756894948637 -0.35337761412332752142 -0.39156124166000122466 -0.78066951241847137855 -0.23767411170768087958 0.46551293872182225586;-0.48140642991972171227 5.454835779654077399 1.3560524292634124066 0.33000284312106209494 6.0803392196374765888 -3.6013822505333918933 2.8911025814659070399 0.93518345988411344383 -1.8255941393267152151 -2.7688665010255482102 -0.043551073180268760898 1.2118463350155137537 -1.9801197247553208314 1.1552316467504877284 -1.3584246425865229568 1.500971514075281954 3.3664727264811387109 4.2993778524586030443 0.51931738246919578739 -3.2054121230802730125;1.9758239070780250213 -2.8678643497342592994 0.55189943275065744821 1.9095225657331220681 1.7533006973978761955 -0.36027100743634454805 0.28526710614413508527 -1.19865958591839461 0.59930716216930646212 -0.33868127411914605851 -2.6419904252651895682 -0.36872105472974436857 0.089709934030950677641 -1.2107794452292988119 0.56380607625923073734 1.8066627992541159919 0.30086064860709577085 0.8422352885229630326 -2.3284732587783469882 -2.2057991722725969197;-1.656019533095256735 1.9134085352425032056 -0.21380114027777097352 -1.24917279614831922 -1.2087610231741208189 0.75158270645508029606 -0.16319423490915702102 0.92995579614315604378 -0.26097940970516975145 0.8082077990861183947 2.7998752209365900256 -0.00062908853992069309335 -0.12897620006025878325 0.82374262918854157522 -0.64905995216152878591 -1.6685737952076593604 -0.44139135515702204726 -0.57540166220498722982 2.0312651714436662509 1.6174743119805590208];

% Layer 2
b2 = [-0.13320268582850572359;0.023452513593194196373];
LW2_1 = [-0.078734980515471314488 0.23608540330555302655 0.075350787322192330775 -0.34490299311737587784 -0.36749236704134902176;-0.019379216008552451606 0.064158752955924186478 0.020803046428460369999 -0.072102106765168164082 -0.078063146310457451338];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.155485191185491;0.174539904785142];
y1_step1.xoffset = [-6.04182542058422;-5.96352044756313];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
