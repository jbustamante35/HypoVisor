function [Y,Xf,Af] = N5(X,~,~)
%N5 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:46.
% 
% [Y] = N5(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1382.65158968192;-1541.77023770571;-1313.20921366892;-1349.70987930125;-855.175723761423;-1052.90168461503;-893.241578115231;-943.950239600184;-1016.07842268964;-860.3434547191;-1051.37708815082;-898.259304896328;-669.479334861272;-974.946430895365;-698.597896425352;-695.686732484152;-699.892364223007;-688.76949697198;-652.498470554799;-668.454931711938];
x1_step1.gain = [0.00056719714549331;0.00060080249895184;0.000746040947068467;0.000669520664455892;0.000877080398972419;0.000819291372664147;0.00106170748998314;0.000989118000336812;0.00107632587243553;0.00122104561303203;0.000824874906122766;0.00121913643014123;0.00148532752234154;0.00120079647221231;0.00151389247185267;0.00135905901869908;0.00156100866130284;0.00163408092924653;0.00153232733031203;0.00170204169639659];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.8785007915115889965;-3.9520104483099673942;-6.4178327679925510907;4.0386936428988668979;-3.8894530066946129132];
IW1_1 = [-1.876590954623752916 -2.2205212210599323264 -1.0027468572817577197 -1.9638314147632629503 -0.75196608257981101264 0.55192819635744039264 -0.18027186331584932333 0.0031048782849562618635 -0.41551199618570688887 -1.7727931821987348293 1.3043984194657070042 -0.15801454070583942357 2.9296879463174660962 -0.13198571851548512868 -1.4432535048554298029 -1.6775474232427196597 -0.091100912288827259888 -0.97473884873743943391 -1.4043894205192348767 0.28104133220141408467;-2.9863457363203251838 2.1698943813034872186 0.70849326259365696945 2.1809647014858946079 -3.7859297408787142558 -0.65194705879785386227 0.55299023778788258809 0.16417501939069653605 0.081399042612716576706 0.45211238165659295429 0.31411958486680596758 -2.323796562551538436 -0.20429045257680747416 1.2705769806934223976 0.37049744217811025893 -1.1335964290683202549 1.1320986940306989599 0.22979484739924943559 1.0544980084763246886 -0.99228607157215542589;-4.7297924612070030292 6.5488601685795382323 3.5864877420037695188 12.408384087416548525 -13.307405600373176213 -4.3056144751739164889 2.95971351927120363 3.1072478531140084179 0.53129437810046797885 2.0880844558871833883 -3.0318626624851869877 -3.0638491714569990876 -9.1475342885129435899 5.7466465508469006807 3.1901095538063031221 -0.91734331929150791929 -3.0575495322047174795 7.9939623144859321968 5.9766810528880567333 6.7043196765329700071;3.1441448218010052962 -2.1325408785548805035 -0.72870786615682692222 -2.2309674306009585898 3.7274961069424907834 0.59389157268861525463 -0.49198124958003297547 -0.19860909668311521603 -0.12225778495641517751 -0.47355968758539901398 -0.31289893738427071446 2.3276767366993706965 0.18281577400423243418 -1.3134507119575615786 -0.43059614624320879939 1.2106935763221735591 -1.1856241722642508751 -0.21996069904497447811 -1.045046192927071127 0.99653786502748720189;1.9603432075601419093 2.2625938756904488969 1.0511369158278294211 1.9268130930210498608 1.0017640347959926306 -0.28181953024932759888 0.13484958913355260535 -0.019336153541738131806 0.59826803597471978069 1.8970304624205831523 -1.3331696134391988195 0.22141871196239415465 -2.8910796465887149687 0.03698757467878994315 1.3142369231443025157 1.5798721003451854372 0.17872052254468615007 1.0714365953866962222 1.342248981003760111 -0.33902670001231860475];

% Layer 2
b2 = [-0.0064534945255361594527;-0.05507473342112689102];
LW2_1 = [-1.3476033331355223854 0.11413132765714703587 -0.01517067105647333658 0.09357426500008142467 -1.3923938920966709709;-2.6487222068962270605 -3.9978905492659646548 0.032306710868294404027 -3.9788049028326510914 -2.7931060959916718112];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.138567488520639;0.15642515679176];
y1_step1.xoffset = [-7.41718749003762;-6.92397367742406];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
