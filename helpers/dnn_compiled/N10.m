function [Y,Xf,Af] = N10(X,~,~)
%N10 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:57.
% 
% [Y] = N10(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1407.39784248702;-1550.6785058289;-1365.85541608942;-1660.06101359562;-1389.83876908445;-1405.99877014126;-958.047348824592;-1079.38070470892;-826.696578564789;-844.162180464333;-966.427651949822;-816.756678501721;-725.505767599635;-948.269030735401;-723.535090661679;-632.076321466729;-642.718215945305;-785.193903021039;-608.21868532049;-638.275097242398];
x1_step1.gain = [0.000567435655559123;0.000602826851999918;0.000747367637960471;0.000655839362998236;0.000867767991530452;0.000811676507043758;0.00107694469229073;0.000981079838539069;0.00110290398468319;0.00126941952126214;0.000867050800852807;0.00124981017303445;0.00141003040220259;0.00117974571217237;0.00149365773730852;0.00135308289703546;0.00174657326762373;0.00132586095783994;0.00167806424787845;0.00171265684116162];
x1_step1.ymin = -1;

% Layer 1
b1 = [9.283058536674330341;-0.0078530141299143485512;-0.79368505252197785182;-5.1941347149251777537;-5.2575838968367438753];
IW1_1 = [4.626975747464855182 -1.9769081515252895365 0.17582137600794098264 3.5845798313261347801 0.33675588228097214083 -0.27160986385821844769 -0.2899349596401187279 6.2468270746571725738 -3.7098938150522919877 2.4792783338583137542 2.0176139697884076796 0.92814522361582507681 -7.3585912655068979049 7.4183393561123134319 -0.58974035223418042051 -0.69560992378992492213 4.2278724393788307268 -4.3167894604243155499 -2.6013468915583990437 -1.4028831972011146512;-4.14743513056442481 1.8688801619429999956 -6.3320544908766507319 -1.5655984085457457233 -3.1951324130000573476 -2.7089150609608325659 -2.6270764072632086794 2.3097924422615263573 3.7860736753344514938 0.37478389467019634917 -3.2918254345821682527 4.5594656431207543079 4.9891082237931847487 -1.8337790411684096181 2.1791742744912943053 -0.6972615643555345466 0.16419401535728656016 2.893674983476134166 -1.2583361369022791898 -0.51524794372598692327;-3.0077490226779435289 0.54628832131521798399 -5.444414076119807433 -1.0530707395669072213 -2.8055862692736908137 -1.4633726533254780566 -1.3053757570688337974 1.8853193966123167336 2.7802379813634594541 -0.37412117320010168653 -3.5866427846055168871 5.2783173832999361608 3.1997446473599495675 -2.2105167614252536623 2.8889546558331722359 -0.8396108920527614039 0.67403430285056975535 1.4974234135597435102 -1.1721599909772431047 -2.3368891451987185981;-2.6978493703555970207 1.1978221682774017331 -0.52369153624790265589 -0.85558618032886146754 3.8933278033333396095 2.6696285568365447638 2.099698440560119117 1.5932769835247615475 -3.4431088563012282044 1.3434192835776312958 -0.66954477250344246464 3.5787685906208199782 -1.640916019283683136 0.86634166718449467925 -1.2249481300176496834 1.4722643691121013454 2.5711310009649839259 -1.9055411634068000204 1.5567293531066295209 -0.78562722475821056278;-3.7600123895973345256 5.6111765709245293721 1.2324993526454799397 1.5710874889240793451 6.5207200394123159271 1.1850481269976664844 -2.5101715690508363821 0.82380005705303593899 0.48278229717265708221 1.3394044987296069849 0.43981403723259004934 3.0542807043007416112 -0.60269113553036557374 1.3457252942284885222 -2.6178599366210608679 1.735375600665536977 1.8057884868917775112 -4.0987578966585083151 0.35483033620293358279 2.0662281839469742728];

% Layer 2
b2 = [0.055006851149667343459;0.069104128273200879362];
LW2_1 = [-0.17819997501552084507 -0.076526082479178525464 0.08010228930586860141 -0.069168184720570902169 0.062950089714803175722;-0.0025630111176788176672 0.013659570414133792582 -0.010951738108376754544 0.021974709654973601652 -0.016211693211463894249];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.169758224091037;0.189629411986222];
y1_step1.xoffset = [-5.19876334822828;-5.59263367097141];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
