function [Y,Xf,Af] = N16(X,~,~)
%N16 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:58.
% 
% [Y] = N16(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1395.7293847254;-1554.19550959077;-1315.61335362842;-1442.21277644733;-914.864747513931;-1012.30929957084;-954.320002071943;-991.959845618589;-869.451379012466;-726.439736518344;-913.699540888504;-837.566526273362;-731.779967344799;-953.10461486972;-594.005416722465;-826.011359380909;-538.14474724238;-729.124135190795;-629.370667148145;-548.362156269529];
x1_step1.gain = [0.000569234168129351;0.000607314181960865;0.000743647142345387;0.000647449031760882;0.000878040044567818;0.000832007341752642;0.00107999323701581;0.000970433365886375;0.00108322522158117;0.00124306589946533;0.000895140580126139;0.00126871662636313;0.00132167140421212;0.00120581851592764;0.00150440840413678;0.00140849617390236;0.00172585184746988;0.0013952860466986;0.00166860507753563;0.00171517767411515];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.6463499576284696957;3.9797806284208427918;4.2624099412423230859;3.6309479521256364798;4.8402598968403172108];
IW1_1 = [-0.76356276074777984508 3.0743215064161235617 0.96716073788536705003 1.1308192303620152597 -3.567689252927593202 0.52871884231366650386 -0.17604346944099347194 1.8114284472355917099 -0.66172552926444705435 -0.72862586818854868653 -0.63464382600743951546 -0.7408349291890571342 -0.7539504575171872558 -0.53440614469653435759 0.0017700016190173306629 0.91396697336695931213 -1.2492884357469828949 1.405319641481162618 -1.3440079847246233502 -1.772399549662993401;-0.42118770321823106872 -3.4729912758119585448 -2.0900668466188214722 2.3348056614444514523 4.9689916843789596612 3.986272510218134002 1.9877128650376654218 0.04303354593754904478 0.48314252973884702635 2.0876333461338165698 -3.5956285483991097252 0.43260344017898166857 -1.296162858234194637 3.2193361075881430367 0.82099307115794006862 3.6630898390204800208 -2.1993171018346333589 3.6268084960245463577 1.9953922186805408412 0.35783705607940585747;-0.69754661468285594772 -3.6223479839614927123 -1.7073009902208853283 3.1108106035043547877 5.2819937736370397019 3.9563575460041713328 2.1949186590412312903 0.34069958677848960482 0.028192046512585555718 1.8224914305517545543 -3.7386823370971264957 0.16241345114426028462 -0.78957024168847467216 3.0879642946344278975 0.66611945079008649806 3.6244215362319369689 -1.9352764414591194786 3.7811605206891560904 2.056246596293900275 -0.013388749400726389707;0.87011760127979698165 -3.1396296530121068358 -1.0025631896559974443 -1.2021097122310142602 3.4196536471490506237 -0.55495541421385019554 0.076795709157175109927 -1.8286528344151571357 0.74668131442522733821 0.68116956084537483296 0.79782618446067632423 0.73205112429853058664 0.62217678338095339097 0.65297169387373243943 0.10987851571969244058 -0.92857773906003571174 1.228010374855326825 -1.3516108352686555527 1.3142315965907451769 1.8022254877454135791;-0.18595331035200007852 -3.2780190621435947307 0.584265480681379068 -2.8153523566191132055 2.0753058966942252717 -1.144894839094500183 -0.62388190276102839515 0.018211626070004746647 1.1358017554764661128 -1.5077709583685792172 -0.086918711239810209079 -1.1789725750024433459 -3.3523833797765512088 3.4957885947840194873 0.27484843000618797149 -0.07361482038282127216 -0.016064893825065214295 -0.19312902041968407763 -0.28064035609813103855 -2.9761106680327578111];

% Layer 2
b2 = [-0.36820112493649465035;-0.76751956519084407748];
LW2_1 = [0.44085841057982522173 -0.047127609317319366089 0.039744173729569662323 0.43706297212347711145 0.28534799389673126679;-1.7728250284972766337 0.34942440192466506232 -0.36086304941951763414 -1.7639980792216083394 0.76892090355797826362];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.194380399329564;0.194376031317211];
y1_step1.xoffset = [-4.65499255811417;-5.12655684254599];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
