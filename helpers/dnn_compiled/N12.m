function [Y,Xf,Af] = N12(X,~,~)
%N12 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Nov-2021 15:18:57.
% 
% [Y] = N12(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 20xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1408.05968368549;-1552.72347669055;-1313.94757370586;-1443.63985003917;-910.919011746698;-1031.06680893976;-908.942399951953;-964.657792036444;-977.05936745172;-737.317776446801;-1320.11918960065;-802.256442493075;-731.854570761382;-716.873192353646;-604.717021478019;-587.226248190142;-641.349317612504;-790.805337551608;-598.402480204132;-628.307501268936];
x1_step1.gain = [0.000568005062070028;0.000605170827156756;0.000745471062583923;0.00064701204803235;0.000874896469224321;0.000824520818982248;0.00106883865271497;0.000976190179649887;0.00110457119577677;0.00124535725335555;0.000891361674285392;0.00123160462336324;0.00136634303129774;0.00121576656254604;0.00150178861738913;0.00140562182085564;0.00176237743376138;0.00129523906787217;0.00165769857372307;0.00170427400698815];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.3514769300238986816;2.2237306777941547864;1.9282175938209211719;2.1935996941958890716;-2.2631540852551683685];
IW1_1 = [0.69409037000106299509 5.8884213549847901348 0.34629292873246120266 1.8075744307931487231 0.17280753800567399958 0.12443077626556343918 4.5625125405755024843 -0.3498987963665396439 -1.1641617323191719713 -3.7425314096937221109 -0.031590628992225339156 0.95267644430815523471 0.15215183147684899212 -2.4110070373357554985 -2.2454980034369844688 -3.2539840772881354347 -0.51385567635097728623 -1.2964900368063605463 -0.42974370537004691339 0.91033188521844765617;0.81786758254668601165 -1.2110527488542397467 0.15121136620358799352 -0.40760692155738598164 -0.32006694917539046941 -0.012101025379628538303 -1.2770854468310024465 -1.7670472967906347694 0.053067927945103836318 0.17072258622797389926 -1.9158725271093750564 0.62433350759089656368 -1.3701537621802319933 -0.54634412679905486332 0.035657638309005562638 0.72038736519030854843 0.014588143610002927975 0.60856343349620312111 -0.79886950537298406783 0.46390939414405490959;-0.1775461955261358471 -7.3527471342075028105 0.67774266967515039983 -4.8428156242062012637 -6.3898130031261981543 5.0661855473558103924 0.70698433934066040596 -5.1741988035413220004 1.3672353917137158863 4.1052600922525224192 -7.1925250930993431808 1.4824917605637426554 -0.84800366425230155887 -3.5301014819739298112 0.39653878119321639417 2.4971576826946049188 -2.8000910899976840795 0.23524054356618118167 -3.6948999031209903698 2.5388565661457822564;0.23723418426265394099 -2.7629935284846665056 0.34397082262386008411 -0.61019403449837184006 -0.4603563172805588688 -0.94852556268344201396 -1.0315149214698364766 -0.41710663845364870372 1.4059554666484201935 0.78114411758670743158 -0.8072540823328417936 -0.060233684306606194436 -0.66472172876415391851 -0.66841365549328646267 1.0702851567402462685 0.1319769722447014515 -0.2686931946857141762 0.60714639486660582079 0.043347127869982682302 0.044318646800956720821;-0.81804975414241454246 1.7948524375574761436 -0.22756014262786827818 0.15011214667592795435 -0.11532960494063897172 0.67040615887421117769 1.617416679024251458 1.2437854698046884039 -0.7737767698118995785 0.14650880793900350474 1.6609264123607947461 -0.72705772432927939786 1.2255906104583067506 0.74103038565313938957 -0.11395313984303503951 -0.27849750065215284067 0.078132536124494944563 -0.40435178003356087029 0.54716522090699404313 -0.34755701791980680992];

% Layer 2
b2 = [-0.11357131734152302316;-0.011384677069244808836];
LW2_1 = [0.039602728450083890532 0.29481537388908318764 -0.024703741322137977299 0.24681748507274525739 0.43917273842941784157;-0.063468101766218920634 -0.42562242440556907752 0.020207404836918060886 -0.34872457580544846678 -0.6972949590168397993];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.184756732846833;0.196650790782528];
y1_step1.xoffset = [-5.05032708473392;-5.03156610935363];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
